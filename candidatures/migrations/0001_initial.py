# Generated by Django 5.2.5 on 2025-08-28 11:07

import django.core.validators
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Candidature',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('resume', models.URLField(help_text='Lien vers le CV', max_length=500)),
                ('headline', models.CharField(help_text='Titre accrocheur du profil', max_length=255)),
                ('years_experience', models.DecimalField(decimal_places=1, help_text="Nombre d'années d'expérience", max_digits=4, validators=[django.core.validators.MinValueValidator(0)])),
                ('skills_primary', models.JSONField(default=list, help_text='Compétences principales (liste de strings)')),
                ('skills_secondary', models.JSONField(default=list, help_text='Compétences secondaires (liste de strings)')),
                ('languages', models.JSONField(default=list, help_text="Langues parlées avec niveau (ex: [{'fr': 'C2'}, {'en': 'B2'}])")),
                ('education_highest', models.CharField(help_text='Diplôme le plus élevé', max_length=255)),
                ('locations_preferred', models.JSONField(default=list, help_text='Localisations préférées (liste de strings)')),
                ('salary_expectation_min', models.PositiveIntegerField(blank=True, help_text='Salaire annuel minimum souhaité', null=True)),
                ('salary_expectation_max', models.PositiveIntegerField(blank=True, help_text='Salaire annuel maximum souhaité', null=True)),
                ('availability_date', models.DateField(blank=True, help_text='Date de disponibilité', null=True)),
                ('work_authorization', models.CharField(choices=[('EU', 'Autorisation UE'), ('Visa', 'Visa requis'), ('No', 'Aucune autorisation')], default='EU', max_length=10)),
                ('status', models.CharField(choices=[('submitted', 'Soumise'), ('screening', 'En sélection'), ('manager_review', 'Revue managériale'), ('tech_test', 'Test technique'), ('interview_1', 'Premier entretien'), ('offer', 'Offre émise'), ('hired', 'Embauché'), ('rejected', 'Rejeté')], default='submitted', max_length=20)),
                ('status_reason', models.TextField(blank=True, help_text='Raison du statut (ex: motif de rejet)')),
                ('priority', models.CharField(choices=[('low', 'Basse'), ('normal', 'Normale'), ('high', 'Haute')], default='normal', max_length=10)),
                ('fit_score_overall', models.DecimalField(blank=True, decimal_places=2, help_text='Score global (0-100)', max_digits=5, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('fit_scores', models.JSONField(default=dict, help_text="Détails par critère (ex: {'skills': 82, 'experience': 75})")),
                ('model_version', models.CharField(blank=True, help_text='Version du modèle IA utilisé pour scorer', max_length=50)),
                ('analyzed_at', models.DateTimeField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Candidature',
                'verbose_name_plural': 'Candidatures',
                'ordering': ['-created_at'],
            },
        ),
    ]
